<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
  Checkstyle configuration that checks the sun coding conventions from:
    - the Java Language Specification at
      https://docs.oracle.com/javase/specs/jls/se11/html/index.html
    - the Sun Code Conventions at https://www.oracle.com/technetwork/java/codeconvtoc-136057.html
    - the Javadoc guidelines at
      https://www.oracle.com/technetwork/java/javase/documentation/index-137868.html
    - the JDK Api documentation https://docs.oracle.com/en/java/javase/11/
    - some best practices
  Checkstyle is very configurable. Be sure to read the documentation at
  https://checkstyle.org (or in your downloaded distribution).
  Most Checks are configurable, be sure to consult the documentation.
  To completely disable a check, just comment it out or delete it from the file.
  Finally, it is worth reading the documentation.
-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        https://checkstyle.org/5.x/config.html#Checker
        <property name="basedir" value="${basedir}"/>
    -->
    <property name="severity" value="error"/>

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See https://checkstyle.org/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See https://checkstyle.org/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See https://checkstyle.org/config_sizes.html -->
    <module name="FileLength"/>

    <!-- Checks for whitespace                               -->
    <!-- See https://checkstyle.org/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <module name="TreeWalker">
        <!--
            ***addition: Enables support for SuppressionCommentFilter
        -->
        <module name="FileContentsHolder"/>

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod">
            <property name="allowedAnnotations"
                      value="Override,Before,Test,Given,When,Then,And"/> <!-- *** no comment needed for tests and override methods -->

            <property name="scope" value="package"/> <!-- *** don't document private methods -->
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowMissingThrowsTags" value="true"/>
            <property name="allowMissingReturnTag" value="true"/>
            <property name="minLineCount" value="50"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
        </module>
        <module name="JavadocVariable">
            <property name="scope" value="protected"/> <!-- *** don't document private fields -->
        </module>
        <module name="JavadocStyle"/>

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>

        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_imports.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="150"/> <!-- *** increased length to 150 -->
        </module>
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter"
                      value="true"/> <!-- *** allow same name for constructor parameters -->
            <property name="ignoreSetter" value="true"/> <!-- *** allow same name for setter parameter -->
        </module>
        <module name="IllegalInstantiation"/>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="ignoreHashCodeMethod" value="true"/> <!-- *** ignore magic numbers in hashCode methods -->
            <property name="ignoreAnnotation"
                      value="true"/> <!-- *** ignore magic numbers in annotation declarations -->
            <property name="ignoreFieldDeclaration"
                      value="true"/> <!-- *** 	ignore magic numbers in field declarations -->
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="NestedIfDepth"/> <!-- *** added if-depth check -->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="CovariantEquals"/> <!-- *** added module -->
        <module name="DeclarationOrder"/> <!-- *** added module -->
        <module name="DefaultComesLast"/> <!-- *** added module -->
        <module name="EqualsAvoidNull"/> <!-- *** added module -->
        <module name="ExplicitInitialization"/> <!-- *** added module -->
        <module name="FallThrough"/> <!-- *** added module -->
        <module name="IllegalCatch">
            <property name="illegalClassNames"
                      value="java.lang.Throwable, java.lang.RuntimeException"/> <!-- *** 	exception class names to reject -->
        </module>
        <module name="IllegalThrows">
            <property name="illegalClassNames" value="NullPointerException"/> <!-- *** 	throw class names to reject -->
        </module>
        <module name="IllegalTokenText"> <!-- *** added module -->
            <property name="tokens" value="STRING_LITERAL"/>
            <property name="format" value="teh"/>
        </module>
        <module name="ModifiedControlVariable"/> <!-- *** added module -->
        <module name="MultipleStringLiterals"/> <!-- *** added module -->
        <module name="MultipleVariableDeclarations"/> <!-- *** added module -->
        <module name="NestedForDepth"/> <!-- *** added module -->
        <module name="NestedTryDepth"/> <!-- *** added module -->
        <module name="NoClone"/> <!-- *** added module -->
        <module name="NoFinalizer"/> <!-- *** added module -->
        <module name="OneStatementPerLine"/> <!-- *** added module -->
        <module name="OverloadMethodsDeclarationOrder"/> <!-- *** added module -->
        <module name="PackageDeclaration"/> <!-- *** added module -->
        <module name="ParameterAssignment"/> <!-- *** added module -->
        <module name="StringLiteralEquality"/> <!-- *** added module -->
        <module name="UnnecessaryParentheses"/> <!-- *** added module -->

        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>

    </module>

</module>